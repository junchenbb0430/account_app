<?xml version="1.0" encoding="UTF-8"?>
<configuration scan="true" scanPeriod="60"> 
	<contextName>management</contextName><!-- 设置上下文名称 -->
	<property name="baseHome" value="${webapp.root}"/>
 	<property name="LOG_HOME" value="../logs/management" />
    <!-- 控制台日志 -->
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">

		<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
			<charset>UTF-8</charset>
			<immediateFlush>true</immediateFlush>
			<pattern>[%level][%d{yyyy-MM-dd HH:mm:ss.SSS}][%thread][%logger{35}] - %msg%n</pattern>
		</encoder>
    </appender>

    <!-- appender负责写日志的组件，name是日志名称，class是指定appender全限定名 -->
    <appender name="BIZINFO" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <File>${LOG_HOME}/BIZ_INFO.log</File>
		<append>true</append><!--日志被追加到文件结尾，默认为false-->
        <!-- ThresholdFilter:临界值过滤器，过滤掉 TRACE 和 DEBUG 级别的日志 -->
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>DEBUG</level>
        </filter>
		<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
			<charset>UTF-8</charset>
			<immediateFlush>true</immediateFlush>
			<pattern>[%level][%d{yyyy-MM-dd HH:mm:ss.SSS}][%thread][%logger{35}] - %msg%n</pattern>
		</encoder>

        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- 每天生成一个日志文件，保存30天的日志文件
            - 如果隔一段时间没有输出日志，前面过期的日志不会被删除，只有再重新打印日志的时候，会触发删除过期日志的操作。
            -->
            <fileNamePattern>${LOG_HOME}/BIZ_INFO_%d{yyyy-MM-dd}.log</fileNamePattern>
            <maxHistory>30</maxHistory><!-- save 30 days -->
            <TimeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>50MB</maxFileSize>
            </TimeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
    </appender >
    
    
   
   
	 <!-- 文件日志 -->  
    <appender name="SQLDEBUG" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <File>${LOG_HOME}/SQL_DEBUG.log</File>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <!-- LevelFilter: 级别过滤器，根据日志级别进行过滤 -->
            <level>DEBUG</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>

		<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
			<charset>UTF-8</charset>
			<immediateFlush>true</immediateFlush>
			<pattern>[%level][%d{yyyy-MM-dd HH:mm:ss.SSS}][%thread][%logger{35}] - %msg%n</pattern>
		</encoder>

        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${LOG_HOME}/SQL_DEBUG_%d{yyyy-MM-dd}.log</fileNamePattern>
            <maxHistory>90</maxHistory>
            <TimeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>100MB</maxFileSize>
            </TimeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
    </appender >
	<!--logger用来设置某一个包或者类的具体日志打印级别  
 	<logger name="ch.qos.logback" />	
    
	 <logger name="com.sinosig.cashmanage" level="debug">
	 	<appender-ref ref="BIZINFO"/>
	 	<appender-ref ref="STDOUT"/>
	 </logger>
	  -->
       <logger name="jdbc.sqltiming" level="DEBUG"/>
    <logger name="com.ibatis" level="DEBUG" />
    <logger name="com.ibatis.common.jdbc.SimpleDataSource" level="DEBUG" />
    <logger name="com.ibatis.common.jdbc.ScriptRunner" level="DEBUG" />
    <logger name="com.ibatis.sqlmap.engine.impl.SqlMapClientDelegate" level="DEBUG" />
    <logger name="java.sql.Connection" level="DEBUG" />
    <logger name="java.sql.Statement" level="DEBUG" />
    <logger name="java.sql.PreparedStatement" level="DEBUG" />
    <logger name="java.sql.ResultSet" level="DEBUG" /> 
    <!-- root也是logger，是所有的logger的上级 -->
    <root level="DEBUG">
        <appender-ref ref="STDOUT"/>
         <appender-ref ref="com.ibatis"/>
         <appender-ref ref="java.sql.Statement"/>
        <appender-ref ref="BIZINFO"/>
    </root>
</configuration>