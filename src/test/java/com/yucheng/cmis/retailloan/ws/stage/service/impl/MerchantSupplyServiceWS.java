package com.yucheng.cmis.retailloan.ws.stage.service.impl;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import com.yucheng.cmis.retailloan.ws.stage.service.IMerchantSupplyServiceWS;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 3.1.16
 * 2018-07-11T18:45:20.376+08:00
 * Generated source version: 3.1.16
 * 
 */
@WebServiceClient(name = "MerchantSupplyServiceWS", 
                  wsdlLocation = "http://10.8.198.72:9001/maps/ws/merchantSupplyServiceWS?WSDL",
                  targetNamespace = "http://impl.service.stage.ws.retailloan.cmis.yucheng.com/") 
public class MerchantSupplyServiceWS extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://impl.service.stage.ws.retailloan.cmis.yucheng.com/", "MerchantSupplyServiceWS");
    public final static QName MerchantSupplyServiceImplWSPort = new QName("http://impl.service.stage.ws.retailloan.cmis.yucheng.com/", "MerchantSupplyServiceImplWSPort");
    static {
        URL url = null;
        try {
            url = new URL("http://10.8.198.72:9001/maps/ws/merchantSupplyServiceWS?WSDL");
             //url = new URL("http://127.0.0.1:8088/maps/ws/merchantSupplyServiceWS?WSDL");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(MerchantSupplyServiceWS.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "http://10.8.198.72:9001/maps/ws/merchantSupplyServiceWS?WSDL");
        }
        WSDL_LOCATION = url;
    }

    public MerchantSupplyServiceWS(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public MerchantSupplyServiceWS(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public MerchantSupplyServiceWS() {
        super(WSDL_LOCATION, SERVICE);
    }
    
    public MerchantSupplyServiceWS(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public MerchantSupplyServiceWS(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public MerchantSupplyServiceWS(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }    




    /**
     *
     * @return
     *     returns IMerchantSupplyServiceWS
     */
    @WebEndpoint(name = "MerchantSupplyServiceImplWSPort")
    public IMerchantSupplyServiceWS getMerchantSupplyServiceImplWSPort() {
        return super.getPort(MerchantSupplyServiceImplWSPort, IMerchantSupplyServiceWS.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns IMerchantSupplyServiceWS
     */
    @WebEndpoint(name = "MerchantSupplyServiceImplWSPort")
    public IMerchantSupplyServiceWS getMerchantSupplyServiceImplWSPort(WebServiceFeature... features) {
        return super.getPort(MerchantSupplyServiceImplWSPort, IMerchantSupplyServiceWS.class, features);
    }

}
